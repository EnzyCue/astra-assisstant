# This is an auto-generated partial config. To use it with 'spacy train'
# you can run spacy init fill-config to auto-fill all default settings:
# python -m spacy init fill-config ./base_config.cfg ./config.cfg


#check README before implementing

#Enzy: This file is the settings that the neural network follows when generating the model.
#It was downloaded from: https://spacy.io/usage/training
#After some  experimenting I found the best settings was
#using CPU, exclusive categories, efficiency over accuracy and textcat
#(my data is pretty bad and im only looking for something simple).
#Note: I wanted to try spancat but could never get it to work for some reason.
#The performance score is 0.89 for this one.
#I will update this if I make changes to the model's settings


[paths]
#train = "data/train.spacy" -> only works if this is in the main directory
#dev = "data/valid.spacy" -> only works if this is in the main directory
train = "Spacy_Neural_Network_Data/train.spacy"
dev = "Spacy_Neural_Network_Data/validate.spacy"
vectors = null
[system]
gpu_allocator = null

[nlp]
lang = "en"
pipeline = ["textcat"]
batch_size = 1000

[components]

[components.textcat]
factory = "textcat"

[components.textcat.model]
@architectures = "spacy.TextCatBOW.v2"
exclusive_classes = true
ngram_size = 1
no_output_layer = false

[corpora]

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}
max_length = 0

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}
max_length = 0

[training]
dev_corpus = "corpora.dev"
train_corpus = "corpora.train"

[training.optimizer]
@optimizers = "Adam.v1"

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = false
tolerance = 0.2

[training.batcher.size]
@schedules = "compounding.v1"
start = 100
stop = 1000
compound = 1.001

[initialize]
vectors = ${paths.vectors}